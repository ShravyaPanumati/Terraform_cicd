steps:
# Step 1: Initialize Terraform
- name: "hashicorp/terraform"
  args: ["init"]
  dir: "terraform"

# Step 2: Apply Terraform configuration
- name: "hashicorp/terraform"
  args: [
    "apply",
    "-auto-approve",
    "-var", "project_id=$_PROJECT_ID",
    "-var", "region=$_REGION",
    "-var", "zone=$_ZONE"
  ]
  dir: "terraform"

# Step 3: Use substitution for instance name and external IP
- name: "gcr.io/cloud-builders/gcloud"
  id: "get-instance-details"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      INSTANCE_NAME=${_INSTANCE_NAME}  # Use substitution for instance name
      EXTERNAL_IP="35.224.123.45"  # Hardcoded external IP (you can replace this with your actual IP)

      # Save the values to files
      echo $INSTANCE_NAME > instance_name.txt
      echo $EXTERNAL_IP > external_ip.txt

# Step 4: Display the application URL in build logs
- name: "gcr.io/cloud-builders/curl"
  id: "test-application"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      EXTERNAL_IP=$(cat external_ip.txt)
      echo "Your application is accessible at: http://$EXTERNAL_IP"
      
      # Optional: Make a request to the external IP to verify if the application is up
      curl -I http://$EXTERNAL_IP

substitutions:
  _PROJECT_ID: "strategic-reef-435523-j1"
  _REGION: "us-central1"
  _ZONE: "us-central1-a"
  _INSTANCE_NAME: "flask-app"  # Define the instance name substitution

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: "E2_HIGHCPU_8"
timeout: "1200s"
