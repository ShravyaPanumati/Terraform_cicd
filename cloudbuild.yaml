steps:
# Step 1: Initialize Terraform
- name: "hashicorp/terraform"
  args: ["init"]
  dir: "terraform"

# Step 2: Apply Terraform configuration
- name: "hashicorp/terraform"
  args: [
    "apply",
    "-auto-approve",
    "-var", "project_id=strategic-reef-435523-j1",  # Directly pass your project ID
    "-var", "region=us-central1",                    # Directly pass your region
    "-var", "zone=us-central1-a"                     # Directly pass your zone
  ]
  dir: "terraform"

# Step 3: Retrieve the external IP using gcloud command
- name: "gcr.io/cloud-builders/gcloud"
  id: "get-instance-details"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      # Retrieve the external IP of the VM using gcloud command
      EXTERNAL_IP=$(gcloud compute instances describe your-instance-name \  # Replace with your actual instance name
        --project=strategic-reef-435523-j1 \  # Directly use your project ID
        --zone=us-central1-a \                 # Directly use your zone
        --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
      # Save the external IP to a file
      echo $EXTERNAL_IP > /workspace/external_ip.txt
      # Optionally, print the external IP for debugging
      echo "Retrieved External IP: $EXTERNAL_IP"

# Step 4: Use the external IP in a different way (e.g., curl)
- name: "gcr.io/cloud-builders/curl"
  id: "test-application"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      # Read the external IP from the file and use it in a curl command
      EXTERNAL_IP=$(cat /workspace/external_ip.txt)
      echo "Your application is accessible at: http://$EXTERNAL_IP"
      curl -I http://$EXTERNAL_IP

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: "E2_HIGHCPU_8"
timeout: "1200s"
