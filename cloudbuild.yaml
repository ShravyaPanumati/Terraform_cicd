substitutions:
  _PROJECT_ID: "strategic-reef-435523-j1"
  _REGION: "us-central1"
steps:
# Step 1: Initialize Terraform
- name: 'hashicorp/terraform'
  args: ['init']
  dir: 'terraform'  # Change 'terraform' to the directory containing your .tf files

# Step 2: Plan Terraform deployment
- name: 'hashicorp/terraform'
  args: ['plan', '-var', "project_id=$_PROJECT_ID", '-var', "region=$_REGION"]
  dir: 'terraform'  # Change 'terraform' to the directory containing your .tf files
  env:
  - '_PROJECT_ID=$_PROJECT_ID'
  - '_REGION=$_REGION'

# Step 3: Apply Terraform changes
- name: 'hashicorp/terraform'
  args: ['apply', '-auto-approve', '-var', "project_id=$_PROJECT_ID", '-var', "region=$_REGION"]
  dir: 'terraform'  # Change 'terraform' to the directory containing your .tf files
  env:
  - '_PROJECT_ID=$_PROJECT_ID'
  - '_REGION=$_REGION'
# Step 4: Install Python dependencies and run Flask app
- name: 'gcr.io/cloud-builders/python:3.9'  # Specify a specific Python version like 3.9
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      pip install -r requirements.txt
      python app/_init_.py

timeout: 1200s # Set timeout for the build process
options:
  logging: GCS_ONLY # Log only to GCS
logsBucket: gs://todo-app-build-logs-strategic-reef-435523 # Specify the logs bucket
