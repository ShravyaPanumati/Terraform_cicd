steps:
  # Step 1: Initialize and apply Terraform
  - name: "hashicorp/terraform"
    args: ["init"]
    dir: "terraform"

  - name: "hashicorp/terraform"
    args: [
      "apply",
      "-auto-approve",
      "-var", "project_id=$_PROJECT_ID",
      "-var", "region=$_REGION"
    ]
    dir: "terraform"

  # Step 2: Upload application to GCS bucket
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["-m", "rsync", "-r", "./app", "gs://${_BUCKET_NAME}/"]

  # Step 3: Deploy application on Compute Engine instance
  - name: "gcr.io/cloud-builders/gcloud"
    id: "deploy-app"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        # Retrieve instance name and external IP
        INSTANCE_NAME="flask-app"  # Hardcoded or fetched from Terraform output
        ZONE="us-central1-a"  # Ensure it matches the instance zone
        
        # Expose instance to the internet via a firewall rule for HTTP traffic
        gcloud compute firewall-rules create allow-http \
          --project=$_PROJECT_ID \
          --allow tcp:80 \
          --target-tags=http-server \
          --network=default \
          --direction=INGRESS

        # Get the external IP address of the Compute Engine instance
        EXTERNAL_IP=$(gcloud compute instances describe $INSTANCE_NAME \
          --project=$_PROJECT_ID \
          --zone=$ZONE \
          --format="get(networkInterfaces[0].accessConfigs[0].natIP)")

        # Display the application URL
        echo "Your application is accessible at: http://$EXTERNAL_IP"

        # Optional: Verify the application is accessible
        curl -I http://$EXTERNAL_IP

substitutions:
  _PROJECT_ID: "strategic-reef-435523-j1"
  _REGION: "us-central1"
  _ZONE: "us-central1-a"
  _BUCKET_NAME: "strategic-reef-435523-j1-static-site"

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: "E2_HIGHCPU_8"
timeout: "1200s"
